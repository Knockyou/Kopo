#include <stdio.h>
#include <stdlib.h>

void Swap(int *x, int *y)
{
    int t = *x;
    *x = *y;
    *y = t;
}

/// <summary>
/// #퀵정렬#
/// 퀵정렬은 특정 데이터를 기준으로 큰 데이터와 작은 데이터를 서로 교환한 후 배열을 두집합으로
/// 나누는 방식의 알고리즘입니다. 기준이 되는 특정한 데이터, 즉 기준점을 피벗이라고 한다
/// 일반적으로 첫번째 원고를 먼저 피벗으로 지정함
/// </summary>
/// <param name="targetArr">정렬할 정수형 배열</param>
/// <param name="startIdx">시작 기준점 인덱스</param>
/// <param name="endIdx">끝 기준 인덱스</param>
void QuickSort(int *targetArr, int startIdx, int endIdx) 
{
    if (startIdx >= endIdx)
        return;

    int pivot = startIdx;
    int i = startIdx + 1;
    int j = endIdx;

    while (i <= j) // 엇갈릴 때까지
    {
        while (i <= endIdx && targetArr[i] <= targetArr[pivot]) // 피벗보다 클때까지 반복
        {
            i++;
        }
        while (j > startIdx && targetArr[j] >= targetArr[pivot])// 피벗보다 작을 때까지
        {
            j--;
        }

        if (i > j) // 엇갈리면 피번 교체
        {
            Swap(&targetArr[j], &targetArr[pivot]); // 배열 안에 개별 주소를 넘겨 주어야함
        }
        else // 엇갈리지 않으면
        {
            Swap(&targetArr[i], &targetArr[j]);
        }
    }
    QuickSort(targetArr, startIdx, j - 1);
    QuickSort(targetArr, j + 1, endIdx);
}

int main()
{
    int arrNum[10] = { 4, 65, 7, 23, 6, 3, 78, -34, 6, 11 };
    int arrLen = sizeof(arrNum) / sizeof(int);

    printf("[Before]");
    for (int i = 0; i < arrLen; i++)
    {
        printf("%d ", arrNum[i]);
    }

    // 배열자체가 포인터이므로 인자로 넘겨줌
    QuickSort(arrNum, 0, arrLen - 1);

    printf("\n[After]");
    for (int i = 0; i < arrLen; i++)
    {
        printf("%d ", arrNum[i]);
    }

    printf("\n\n");
    return 0;
}
